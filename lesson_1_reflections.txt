cd ~                          # change directories to your home directory
mkdir version-control         # make version-control directory
cd version-control            # go to version-control directory
mkdir reflections             # create reflections directory
cd reflections                # go to reflections directory
subl lesson_1_reflections.txt # launch sublime with file called lesson_1_reflections.txt (you can replace subl with another editor here if you prefer a different one)

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?
what changes is made for what reason.

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
the commits are not labeled as a useri friendly manner and logically apart from each other.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
There are some bunch of files that act together like project files etc.

How can you use the commands git log and git diff to view the history of files?
güzel kullanırız walla

Now that you have your workspace set up, what do you want to try using Git for?
trying to sleep or drink but you are asking to much questions